{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/Services.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","newName","handleNameChange","newNumber","handleNumberChange","addPerson","value","onChange","type","onClick","Persons","filteredPersons","deletePerson","map","person","key","name","number","event","Filter","handleNameFilter","url","Person","axios","post","then","response","data","get","id","delete","put","res","Notification","message","msg","style","className","App","useState","persons","setPersons","setNewName","setNewNumber","filter","setFilter","setMessage","notificationHandler","setTimeout","useEffect","Services","toLowerCase","includes","exists","find","target","preventDefault","window","confirm","p","concat","createdPerson","catch","err","JSON","stringify","e","_","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e12c6ec.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonForm = ({ newName, handleNameChange, newNumber, handleNumberChange, addPerson}) => {\n    return(\n    <>\n        <h2>Add new</h2>\n        <form>\n            <div>name: <input value={newName} onChange={handleNameChange}/></div>\n            <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\n            <div>\n            <button type=\"submit\" onClick={addPerson}>add</button>\n            </div>\n        </form>\n    </>\n    )}\n\nexport default PersonForm","import React from 'react';\n\nconst Persons = ({ filteredPersons, deletePerson }) => {\n    return(\n        <ul>\n            {filteredPersons.map(person => <p key={person.name}>{person.name} {person.number} \n            <button onClick={event => deletePerson(event, person.name)}>delete</button></p>)}\n        </ul>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({ handleNameFilter }) => {\n    return (\n        <div>filter shown with: <input onChange={handleNameFilter}/></div>\n    )\n}\n\nexport default Filter","import axios from 'axios';\n\nconst url = '/api/persons';\n\nconst getAll = () => {\n    return axios.get(url)\n  }\n\nconst create = Person => {\n    const request = axios.post(url, Person)\n    return request.then(response => response.data)\n  }\n\nconst deleteNum = id => {\n    const request = axios.delete(`${url}/${id}`)\n    return request.then(response => response.data)\n    }\n\nconst update = (id, person) => {\n    const request = axios.put(`${url}/${id}`, person)\n    return (request.then(res => res.data))\n}\n\nexport default {create, getAll, deleteNum, update}","import React from 'react';\n\nconst Notification = ({ message }) => {\n    const msg = message.style === 'error' ? <div className='error'>{message.message}</div>\n    : (<div className='success'>{message.message}</div>);\n    if (message.message === null){\n        return null;\n    }\n    else{return msg;}\n    \n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport './App.css';\nimport Services from './services/Services';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setFilter ] = useState(null)\n  const [ message, setMessage ] = useState(\n    {message: null, \n    style: null});\n\n  const notificationHandler = (message,style) => {\n    setMessage({\n        message: message,\n        style: style\n    });\n    setTimeout(() => {\n        setMessage({\n            message: null,\n            style: null\n        });\n    }, 5000);\n};\n\n\n  useEffect(() => {\n    Services.getAll()\n        .then(response => {\n            setPersons(response.data)\n        })\n},[])\n  //handleri nimi-inputille\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  //handleri numero-inputille\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  //handleri filteröinnille\n  const handleNameFilter = (event) => {\n    setFilter(event.target.value.toLowerCase())\n  }\n\n  //lista numeroista jotka vastaa annettua filtteriä\n  const filteredPersons = filter\n    ? persons.filter(person => {\n      return person.name.toLowerCase().includes(filter.toLowerCase())\n    })\n    : persons\n\n  const deletePerson = (e, name) => {\n    e.preventDefault()\n    const person = persons.find(person => person.name === name)\n    if(person){\n      if(window.confirm(`Poistetaanko ${person.name}`)){\n        Services.deleteNum(person.id)\n        .then(_ => \n          setPersons(persons.filter(p => p.id !== person.id)),\n          notificationHandler(`Deleted ${person.name} successfully`, 'success'))\n        .catch(err => { notificationHandler(`Person ${person.name} was already removed! Please refresh page.`, 'error')\n        })\n      }\n    }\n  }\n  const exists = persons.find(person => person.name === newName)\n  const addPerson = (event) => {\n    event.preventDefault()\n    const Person = {\n      name: newName,\n      number: newNumber\n    }\n    if(!exists)\n    {\n      if(newName !== ''){\n        Services.create(Person).then(createdPerson => {\n          setPersons(persons.concat(Person))\n          notificationHandler(`Added ${newName} successfully`)\n          setNewNumber('')\n          setNewName('')\n        }).catch(err => notificationHandler(`${JSON.stringify(err.response.data)}`), 'error')\n        \n      }\n      else {\n        notificationHandler('Empty not allowed!', 'error');\n      }\n    }\n    else{\n      if(window.confirm(`${newName} is already in phonebook, do you want to update?`)){\n        Services\n        .update(exists.id, Person)\n        .then(res => {\n          setPersons(persons.filter(p => p.name !== Person.name).concat(res))\n          notificationHandler(`Added ${Person.name}`, 'success');\n        })\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <Filter handleNameFilter={handleNameFilter}/>\n      <PersonForm newName={newName} addPerson={addPerson}\n            handleNameChange={handleNameChange} \n            handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons filteredPersons={filteredPersons} deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}